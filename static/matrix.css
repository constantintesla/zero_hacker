/* Matrix theme */
:root { --bg: #000; --green: #00ff95; --dim: #0a2d23; --text: #b9ffe2; --accent: #25ffb0; }
* { box-sizing: border-box; }
html, body { height: 100%; }
body { margin: 0; background: var(--bg); color: var(--text); font-family: 'Share Tech Mono', monospace; }
#rain { position: fixed; inset: 0; z-index: 0; background: transparent; }
.container { position: relative; z-index: 1; max-width: 920px; margin: 0 auto; padding: 32px 16px; }
.site-header { display: flex; justify-content: space-between; align-items: baseline; gap: 16px; margin-bottom: 24px; }
.brand { color: var(--green); letter-spacing: 3px; margin: 0; }
.target { color: var(--accent); opacity: .9; }
.content { display: grid; gap: 16px; }
.panel { background: rgba(0, 20, 10, 0.6); border: 1px solid var(--dim); padding: 16px; border-radius: 8px; box-shadow: 0 0 24px rgba(0,255,149,0.08) inset, 0 0 24px rgba(0,255,149,0.12); }
.panel.success { border-color: var(--green); }
.input { width: 100%; background: #01140d; color: var(--text); border: 1px solid var(--dim); padding: 10px 12px; border-radius: 6px; outline: none; }
.input.area { min-height: 120px; }
.btn { appearance: none; background: linear-gradient(180deg, rgba(0,255,149,.2), rgba(0,255,149,.05)); border: 1px solid var(--green); color: var(--text); padding: 10px 16px; border-radius: 6px; cursor: pointer; text-transform: uppercase; letter-spacing: 2px; }
.btn:hover { filter: brightness(1.1); box-shadow: 0 0 12px rgba(0,255,149,0.25); }
.hint { color: #7cffcb; opacity: .8; }
.reveal { font-size: 20px; }
.site-footer { opacity: .7; margin-top: 24px; font-size: 12px; }

.shapes3d, .slots3d { display: grid; grid-template-columns: repeat(3, 1fr); gap: 16px; margin: 12px 0; }
.shape, .slot { height: 120px; position: relative; display: grid; place-items: center; }
.shape {}
.shape.sphere { width: 120px; height: 120px; border-radius: 50%; background: radial-gradient(circle at 35% 35%, rgba(255,255,255,.25), rgba(0,255,149,.2) 30%, rgba(0,255,149,.05) 70%); box-shadow: inset -12px -12px 24px rgba(0,0,0,.35), 0 0 16px rgba(0,255,149,.25); }
.slot.sphere { width: 120px; height: 120px; border-radius: 50%; border: 2px dashed var(--dim); }
.shape.pyramid .pyramid-inner, .slot .pyramid-inner { width: 0; height: 0; border-left: 60px solid transparent; border-right: 60px solid transparent; border-bottom: 120px solid rgba(0,255,149,.2); filter: drop-shadow(0 0 16px rgba(0,255,149,.25)); }
.slot .pyramid-inner.hollow { border-bottom-color: transparent; border-bottom-width: 124px; border-left-width: 62px; border-right-width: 62px; border-top: 2px dashed var(--dim); width: 0; height: 0; }
.shape.cube .cube-inner, .slot .cube-inner { width: 110px; height: 110px; background: linear-gradient(135deg, rgba(0,255,149,.2), rgba(0,255,149,.05)); box-shadow: inset -12px -12px 24px rgba(0,0,0,.35), 0 0 16px rgba(0,255,149,.25); }
.slot .cube-inner.hollow { background: transparent; border: 2px dashed var(--dim); width: 120px; height: 120px; }
[data-accept].done, .slot.done { outline: 2px solid var(--green); box-shadow: 0 0 16px rgba(0,255,149,.35); }

.wires { list-style: decimal-leading-zero; padding-left: 20px; margin: 0; display: grid; gap: 6px; }
.wire { padding: 8px 12px; border: 1px solid var(--dim); background: rgba(0,255,149,.06); cursor: grab; }
.wire.disabled { opacity: .6; cursor: default; }
.grid { display: grid; gap: 12px; grid-auto-flow: column; width: fit-content; }
.sliders label { display: grid; grid-template-columns: 240px auto auto; align-items: center; gap: 8px; }

/* stage and layout for game1 */
.stage3d { display: grid; grid-template-columns: 1fr 2fr; gap: 24px; align-items: start; perspective: 800px; }
.tray { display: grid; gap: 16px; padding: 12px; background: rgba(0, 20, 10, 0.5); border: 1px solid var(--dim); border-radius: 8px; box-shadow: 0 0 24px rgba(0,255,149,0.08) inset; }
.board { display: grid; grid-template-columns: repeat(3, 1fr); gap: 16px; padding: 12px; background: linear-gradient(180deg, rgba(0,15,8,.5), rgba(0,15,8,.2)); border: 1px solid var(--dim); border-radius: 8px; box-shadow: 0 10px 40px rgba(0,0,0,.35), inset 0 0 24px rgba(0,255,149,0.05); transform: rotateX(8deg); transform-origin: top; }

/* shapes */
.shape { position: relative; cursor: grab; transition: transform .2s ease, filter .2s ease; }
.shape.dragging { cursor: grabbing; transform: translateZ(20px) scale(1.06) rotateX(6deg); filter: drop-shadow(0 12px 20px rgba(0,255,149,.25)); }

/* sphere */
.shape.sphere { width: 120px; height: 120px; border-radius: 50%; background: radial-gradient(circle at 35% 35%, rgba(255,255,255,.3), rgba(0,255,149,.25) 35%, rgba(0,255,149,.08) 70%, rgba(0,0,0,.3) 80%); box-shadow: inset -16px -16px 28px rgba(0,0,0,.45), 0 0 18px rgba(0,255,149,.25); }

/* pyramid */
.shape.pyramid .pyramid-inner { width: 0; height: 0; border-left: 60px solid transparent; border-right: 60px solid transparent; border-bottom: 120px solid rgba(0,255,149,.25); filter: drop-shadow(0 8px 16px rgba(0,255,149,.25)); }

/* cube */
.shape.cube .cube-inner { width: 110px; height: 110px; background: linear-gradient(135deg, rgba(0,255,149,.3), rgba(0,255,149,.08)); box-shadow: inset -14px -14px 28px rgba(0,0,0,.45), 0 0 18px rgba(0,255,149,.25); transform: rotateX(8deg) rotateY(-8deg); border-radius: 6px; }

/* sockets */
.socket { position: relative; display: grid; place-items: center; gap: 8px; padding: 12px; background: rgba(0,10,6,.6); border: 1px solid var(--dim); border-radius: 10px; min-height: 170px; transition: box-shadow .2s ease, border-color .2s ease; }
.socket .label { font-size: 12px; opacity: .8; }
.socket.hot { border-color: var(--green); box-shadow: 0 0 18px rgba(0,255,149,.35); }
.socket.nope { border-color: #ff6b6b; box-shadow: 0 0 14px rgba(255,107,107,.25); }
.socket.done { border-color: var(--green); box-shadow: 0 0 22px rgba(0,255,149,.35) inset; }

.socket-inner.sphere { width: 130px; height: 130px; border-radius: 50%; background: radial-gradient(circle at 50% 60%, rgba(0,0,0,.75), rgba(0,20,10,.85) 55%, rgba(0,255,149,.08) 65%); outline: 2px dashed var(--dim); outline-offset: -6px; }
.socket-inner.pyramid { width: 0; height: 0; border-left: 64px solid transparent; border-right: 64px solid transparent; border-bottom: 128px solid rgba(0,20,10,.9); outline: 2px dashed var(--dim); filter: drop-shadow(0 6px 14px rgba(0,0,0,.6)); }
.socket-inner.cube { width: 124px; height: 124px; background: linear-gradient(145deg, rgba(0,12,7,.95), rgba(0,25,15,.85)); border-radius: 8px; outline: 2px dashed var(--dim); box-shadow: inset 0 0 24px rgba(0,0,0,.6); }

.socket-inner.snapped { animation: snap .2s ease; }
@keyframes snap { from { transform: scale(.96); } to { transform: scale(1); } }

/* Responsive container */
.container { max-width: 920px; padding: 24px 12px; }
@media (max-width: 800px){
	.container { max-width: 100%; padding: 16px 10px; }
	.site-header { flex-direction: column; align-items: flex-start; gap: 6px; }
	.stage3d { grid-template-columns: 1fr; }
	.board { grid-template-columns: 1fr; transform: none; }
	.grid { grid-auto-flow: row; }
	.shapes3d, .slots3d { grid-template-columns: 1fr; }
	.shape.sphere, .slot.sphere { width: 96px; height: 96px; }
	.shape.cube .cube-inner { width: 96px; height: 96px; }
	.socket-inner.cube { width: 108px; height: 108px; }
}

/* Game2 wires styling */
.wire { display: grid; grid-template-columns: 16px 1fr; align-items: center; gap: 10px; border-radius: 6px; }
.wire::before { content: ""; display: inline-block; width: 16px; height: 16px; border-radius: 3px; box-shadow: 0 0 10px rgba(0,0,0,.35) inset; }
.wire:active { cursor: grabbing; }
/* color mapping */
.wire:nth-child(1)::before { background: linear-gradient(135deg,#fff7e8,#ff9f43); }
.wire:nth-child(2)::before { background: linear-gradient(135deg,#ffb86b,#ff7a00); }
.wire:nth-child(3)::before { background: linear-gradient(135deg,#e8fff1,#2bd680); }
.wire:nth-child(4)::before { background: linear-gradient(135deg,#7cc0ff,#0066ff); }
.wire:nth-child(5)::before { background: linear-gradient(135deg,#e6f2ff,#67a6ff); }
.wire:nth-child(6)::before { background: linear-gradient(135deg,#7bffc4,#1dbf73); }
.wire:nth-child(7)::before { background: linear-gradient(135deg,#fff0e0,#b37d4e); }
.wire:nth-child(8)::before { background: linear-gradient(135deg,#d2a679,#6b3e18); }

/* mobile hit areas */
.wires .wire { padding: 12px 14px; }
@media (max-width: 600px){
	.wires { gap: 10px; }
}

/* Game3 tuner neon */
.sliders label { background: rgba(0, 20, 10, 0.5); padding: 10px; border-radius: 8px; border: 1px solid var(--dim); box-shadow: 0 0 16px rgba(0,255,149,.08) inset; }
.sliders input[type=range] { -webkit-appearance: none; appearance: none; height: 6px; background: linear-gradient(90deg, rgba(0,255,149,.4), rgba(0,255,149,.1)); border-radius: 999px; outline: none; }
.sliders input[type=range]::-webkit-slider-thumb { -webkit-appearance: none; appearance: none; width: 18px; height: 18px; background: var(--green); border-radius: 50%; box-shadow: 0 0 14px rgba(0,255,149,.6); }
.sliders input[type=range]::-moz-range-thumb { width: 18px; height: 18px; background: var(--green); border-radius: 50%; box-shadow: 0 0 14px rgba(0,255,149,.6); border: none; }
.tolerance-ok { color: #7cffcb; }
.tolerance-bad { color: #ff9aa2; }

/* Tuner indicator */
.tuner-indicator { display: grid; gap: 10px; margin-top: 12px; }
.tuner-indicator .bar { position: relative; height: 10px; background: rgba(0,20,10,.5); border: 1px solid var(--dim); border-radius: 999px; overflow: hidden; }
.tuner-indicator .bar::after { content: ""; position: absolute; inset: 0; width: calc(var(--fill, 0) * 100%); background: linear-gradient(90deg, rgba(0,255,149,.5), rgba(0,255,149,.15)); box-shadow: 0 0 14px rgba(0,255,149,.4); }
.tuner-indicator .bar.ok { box-shadow: 0 0 14px rgba(0,255,149,.35) inset; border-color: var(--green); }

@media (max-width: 600px){
	.tuner-indicator .bar { height: 12px; }
}

/* wires svg overlay */
.wires-area { position: relative; align-items: start; }
.wires-area .col { position: relative; z-index: 2; }
.wires-svg { position: absolute; inset: 0; z-index: 1; pointer-events: none; }
.wire-path { filter: drop-shadow(0 0 6px rgba(0,255,149,.35)); opacity: .9; }

/* Game1 enhancements */
.tray .shape:hover { transform: translateZ(8px) scale(1.03) rotateX(4deg); filter: drop-shadow(0 10px 18px rgba(0,255,149,.22)); }
.socket-inner.sphere { background: radial-gradient(circle at 50% 60%, rgba(0,0,0,.75), rgba(0,20,10,.85) 55%, rgba(0,255,149,.08) 65%); }
.socket { box-shadow: 0 12px 30px rgba(0,0,0,.35), inset 0 0 24px rgba(0,255,149,.07); }

/* stronger 3D interaction for game1 */
.stage3d { perspective: 1200px; }
.board { transform: rotateX(calc(var(--tiltX, 6deg))) rotateY(calc(var(--tiltY, 0deg))); transition: transform .08s linear; }
.shape.pop { animation: popUp .15s ease both; }
@keyframes popUp { from { transform: translateZ(0) scale(1); } to { transform: translateZ(24px) scale(1.08); } }
.socket.done .socket-inner { box-shadow: 0 0 22px rgba(0,255,149,.35) inset, 0 8px 24px rgba(0,0,0,.45); }

/* meters amplification */
.meters { display: grid; grid-template-columns: 1fr; gap: 10px; margin-top: 12px; }
.meter { position: relative; height: 18px; background: rgba(0,20,10,.5); border: 1px solid var(--dim); border-radius: 6px; overflow: hidden; }
.meter .fill { position: absolute; inset: 0; width: calc(var(--lvl, 0) * 100%); background: linear-gradient(90deg, rgba(0,255,149,.55), rgba(0,255,149,.18)); box-shadow: 0 0 16px rgba(0,255,149,.35); transition: width .12s linear; }
.meter.ok .fill { animation: pulse 1.1s ease-in-out infinite alternate; }
.meter span { position: absolute; right: 6px; top: 0; bottom: 0; display: grid; place-items: center; opacity: .75; font-size: 12px; }
@keyframes pulse { from { filter: drop-shadow(0 0 6px rgba(0,255,149,.35)); } to { filter: drop-shadow(0 0 14px rgba(0,255,149,.65)); } }

/* sortable improvements */
.wire.dragging { opacity: .85; transform: scale(1.02); transition: transform .08s ease; }
.wire.placeholder { border: 1px dashed var(--green); background: rgba(0,255,149,.06); }

/* epic end scene */
.end-scene { display: grid; gap: 16px; place-items: center; text-align: center; }
.portal { position: relative; width: 300px; height: 300px; display: grid; place-items: center; }
.portal .ring { position: absolute; border-radius: 50%; border: 2px solid var(--green); filter: drop-shadow(0 0 16px rgba(0,255,149,.45)); opacity: .85; animation: spin 6s linear infinite; }
.portal .ring1 { width: 260px; height: 260px; animation-duration: 8s; }
.portal .ring2 { width: 220px; height: 220px; animation-duration: 6s; }
.portal .ring3 { width: 180px; height: 180px; animation-duration: 4s; }
#particles { position: absolute; width: 280px; height: 280px; background: transparent; }
@keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }
.end-text h2 { letter-spacing: 4px; color: var(--green); }
.type { font-size: 18px; color: var(--text); text-shadow: 0 0 8px rgba(0,255,149,.25); }

/* hero start screen */
.hero { display: grid; gap: 16px; place-items: center; padding: 40px 12px; text-align: center; }
.glitch { position: relative; font-size: 48px; color: var(--green); letter-spacing: 6px; text-shadow: 0 0 10px rgba(0,255,149,.45); }
.glitch::before, .glitch::after { content: attr(data-text); position: absolute; left: 0; top: 0; width: 100%; color: var(--green); mix-blend-mode: screen; }
.glitch::before { transform: translate(2px, -2px); filter: drop-shadow(-2px 0 #00fff0); opacity: .6; animation: glitch 2.2s infinite; }
.glitch::after { transform: translate(-2px, 2px); filter: drop-shadow(2px 0 #00ff95); opacity: .6; animation: glitch 2.4s infinite; }
@keyframes glitch { 0%{ clip-path: inset(0 0 0 0); } 20%{ clip-path: inset(10% 0 60% 0); } 40%{ clip-path: inset(40% 0 20% 0); } 60%{ clip-path: inset(70% 0 5% 0); } 80%{ clip-path: inset(20% 0 50% 0); } 100%{ clip-path: inset(0 0 0 0); } }
.type { position: relative; }
.type::after { content: '\2588'; margin-left: 6px; animation: caret 1s steps(1) infinite; color: var(--green); }
@keyframes caret { 0%, 50% { opacity: 1; } 50.01%, 100% { opacity: 0; } }
.hero-cta { display: grid; gap: 12px; grid-auto-flow: column; }
@media (max-width: 600px){ .glitch { font-size: 36px; } .hero-cta { grid-auto-flow: row; } }

/* ensure portal transparent */
#particles { background: transparent; }
.portal .ring { background: radial-gradient(circle at center, rgba(0,255,149,.06), transparent 60%); }

/* tap-to-swap selection */
.tap-swap .wire.selected { outline: 2px solid var(--green); box-shadow: 0 0 12px rgba(0,255,149,.35); }
@media (max-width: 600px){ .wires { gap: 6px; } .wire { padding: 10px 12px; } }

@media (max-width: 600px){
	.sliders { grid-template-columns: 1fr; }
}

/* fit Game1 to viewport height */
@media (max-height: 700px){
	.stage3d { transform: scale(.9); transform-origin: top center; }
}
@media (max-height: 600px){
	.stage3d { transform: scale(.8); }
}

/* parallax layers for game1 */
.parallax { position: relative; overflow: hidden; }
.parallax .plx.layer { position: absolute; inset: -10%; pointer-events: none; }
.parallax .plx.back { background: radial-gradient(ellipse at center, rgba(0,255,149,.05), transparent 60%); transform: translate(var(--plxX,0), var(--plxY,0)) scale(1.1); }
.parallax .plx.mid { background: repeating-linear-gradient(90deg, rgba(0,255,149,.07) 0 1px, transparent 1px 40px); transform: translate(calc(var(--plxX,0) * .6), calc(var(--plxY,0) * .6)); mix-blend-mode: screen; }
.parallax .plx.front { background: radial-gradient(circle at 30% 30%, rgba(0,255,149,.06), transparent 40%); transform: translate(calc(var(--plxX,0) * .3), calc(var(--plxY,0) * .3)); }
.cursor-light { position: absolute; width: 200px; height: 200px; border-radius: 50%; background: radial-gradient(circle, rgba(0,255,149,.25), rgba(0,255,149,0)); pointer-events: none; mix-blend-mode: screen; transform: translate(-200px,-200px); }
.shape .shadow-proj { position: absolute; bottom: -6px; left: 10px; right: 10px; height: 16px; background: radial-gradient(ellipse at center, rgba(0,0,0,.4), transparent 60%); filter: blur(2px); opacity: .8; }

/* connect-the-ports UI */
.connect-area { position: relative; display: grid; grid-template-columns: 1fr 1fr; gap: 16px; align-items: start; }
.connect-area .side { display: grid; gap: 8px; }
.connect-area .plug, .connect-area .port { appearance: none; background: rgba(0, 20, 10, 0.5); color: var(--text); border: 1px solid var(--dim); border-radius: 6px; padding: 10px 12px; text-align: left; cursor: pointer; }
.connect-area .plug.sel { outline: 2px solid var(--green); box-shadow: 0 0 12px rgba(0,255,149,.35); }
.cables { position: absolute; inset: 0; pointer-events: none; filter: drop-shadow(0 0 8px rgba(0,255,149,.25)); }
.cable { transition: stroke-dashoffset .35s ease; }
@media (max-width: 700px){ .connect-area { grid-template-columns: 1fr; } }

/* route transition overlay */
.transition { position: fixed; inset: 0; z-index: 5; display: grid; place-items: center; background: rgba(0,0,0,.85); transition: opacity .25s ease; }
.transition.hide { opacity: 0; pointer-events: none; }
.portal-overlay { position: relative; width: 200px; height: 200px; }
.portal-overlay .ring { position: absolute; inset: 0; border: 2px solid var(--green); border-radius: 50%; animation: spin 3s linear infinite; filter: drop-shadow(0 0 12px rgba(0,255,149,.45)); }
.portal-overlay .ring:nth-child(2) { transform: scale(.7); animation-duration: 2.2s; }
.portal-overlay .ring:nth-child(3) { transform: scale(.4); animation-duration: 1.6s; }

/* circuit puzzle styles updates */
.circuit .cgrid { --n: 5; display: grid; grid-template-columns: repeat(var(--n), 1fr); gap: 8px; background: rgba(0,20,10,.5); padding: 12px; border-radius: 10px; border: 1px solid var(--dim); box-shadow: inset 0 0 24px rgba(0,255,149,.08); position: relative; }
.circuit .markers { position: absolute; inset: 0; pointer-events: none; }
.circuit .markers .start { position: absolute; left: 6px; top: 50%; transform: translateY(-50%); font-size: 12px; color: var(--green); }
.circuit .markers .goal { position: absolute; right: 6px; top: 50%; transform: translateY(-50%); font-size: 12px; color: var(--green); }

/* enhanced tile visuals */
.tile { position: relative; width: 100%; aspect-ratio: 1/1; border: 1px solid var(--dim); border-radius: 8px; background: radial-gradient(circle at 30% 30%, rgba(0,255,149,.08), rgba(0,255,149,.03)); cursor: pointer; overflow: hidden; }
.tile .track { position: absolute; inset: 16%; border-radius: 6px; background: conic-gradient(from 0deg, rgba(0,255,149,.18), transparent 25% 50%, rgba(0,255,149,.18) 50% 75%, transparent 75% 100%); transform: rotate(calc(var(--rot) * 90deg)); mix-blend-mode: screen; filter: blur(.2px); }
.tile[data-type="I"] .track { background: linear-gradient(0deg, transparent 42%, rgba(0,255,149,.5) 42% 58%, transparent 58%), linear-gradient(90deg, transparent 42%, rgba(0,255,149,.12) 42% 58%, transparent 58%); }
.tile[data-type="L"] .track { background: conic-gradient(from 0deg, rgba(0,255,149,.5) 0 25%, transparent 25% 100%); }
.tile[data-type="T"] .track { background: conic-gradient(from 0deg, rgba(0,255,149,.5) 0 25%, transparent 25% 50%, rgba(0,255,149,.5) 50% 75%, transparent 75% 100%); }
.tile[data-type="X"] .track { background: conic-gradient(from 45deg, rgba(0,255,149,.45) 0 25%, transparent 25% 50%, rgba(0,255,149,.45) 50% 75%, transparent 75% 100%); }
.tile .glow { position: absolute; inset: 0; background: radial-gradient(circle, rgba(0,255,149,.08), transparent 60%); opacity: 0; transition: opacity .15s linear; }
.tile.lit .glow { opacity: 1; }

/* connector segments */
.tile { --seg: 18%; }
.tile .seg { position: absolute; left: 50%; top: 50%; width: 10%; height: var(--seg); background: rgba(0,255,149,.22); transform-origin: center bottom; opacity: .0; border-radius: 2px; }
.tile .seg.seg-U { transform: translate(-50%, -50%) rotate(0deg); }
.tile .seg.seg-R { transform: translate(-50%, -50%) rotate(90deg); }
.tile .seg.seg-D { transform: translate(-50%, -50%) rotate(180deg); }
.tile .seg.seg-L { transform: translate(-50%, -50%) rotate(270deg); }
.tile.lit.avail-U .seg-U,
.tile.lit.avail-R .seg-R,
.tile.lit.avail-D .seg-D,
.tile.lit.avail-L .seg-L { opacity: .35; }
.tile.lit.conn-U .seg-U,
.tile.lit.conn-R .seg-R,
.tile.lit.conn-D .seg-D,
.tile.lit.conn-L .seg-L { opacity: 1; box-shadow: 0 0 12px rgba(0,255,149,.55); background: rgba(0,255,149,.6); }

/* pretty PCB-like tiles */
.tile.pretty { position: relative; background: linear-gradient(165deg, rgba(0,18,12,.95), rgba(0,28,18,.85)); border: 1px solid #0e3b2c; box-shadow: inset 0 0 28px rgba(0,255,149,.06), 0 10px 24px rgba(0,0,0,.35); }
.tile.pretty .frame { position: absolute; inset: 0; border-radius: 8px; background: linear-gradient(180deg, rgba(0,255,149,.12), rgba(0,255,149,0)); mask: radial-gradient(ellipse at top left, #000 60%, transparent 61%); pointer-events: none; }
.tile.pretty .screw { position: absolute; width: 8px; height: 8px; border-radius: 50%; background: radial-gradient(circle, #1b4, #0a2); box-shadow: 0 0 8px rgba(0,255,149,.25); }
.tile.pretty .screw.tl { left: 6px; top: 6px; }
.tile.pretty .screw.tr { right: 6px; top: 6px; }
.tile.pretty .screw.bl { left: 6px; bottom: 6px; }
.tile.pretty .screw.br { right: 6px; bottom: 6px; }
.tile.pretty.lit { box-shadow: inset 0 0 28px rgba(0,255,149,.12), 0 10px 28px rgba(0,255,149,.12); }

/* circuit puzzle styles */
.circuit { position: relative; }
.circuit #grid { --n: 5; display: grid; grid-template-columns: repeat(var(--n), 1fr); gap: 8px; background: rgba(0,20,10,.5); padding: 12px; border-radius: 10px; border: 1px solid var(--dim); box-shadow: inset 0 0 24px rgba(0,255,149,.08); }
.tile { position: relative; width: 100%; aspect-ratio: 1/1; border: 1px solid var(--dim); border-radius: 8px; background: radial-gradient(circle at 30% 30%, rgba(0,255,149,.1), rgba(0,255,149,.04)); cursor: pointer; overflow: hidden; }
.tile span { position: absolute; inset: 10%; border-radius: 6px; background: conic-gradient(from 0deg, rgba(0,255,149,.2), transparent 25% 50%, rgba(0,255,149,.2) 50% 75%, transparent 75% 100%); transform: rotate(calc(var(--rot) * 90deg)); mix-blend-mode: screen; }
.tile[data-type="I"] span { background: linear-gradient(0deg, transparent 40%, rgba(0,255,149,.5) 40% 60%, transparent 60%), linear-gradient(90deg, transparent 40%, rgba(0,255,149,.12) 40% 60%, transparent 60%); }
.tile[data-type="L"] span { background: conic-gradient(from 0deg, rgba(0,255,149,.5) 0 25%, transparent 25% 100%); }
.tile[data-type="T"] span { background: conic-gradient(from 0deg, rgba(0,255,149,.5) 0 25%, transparent 25% 50%, rgba(0,255,149,.5) 50% 75%, transparent 75% 100%); }
.tile[data-type="X"] span { background: conic-gradient(from 45deg, rgba(0,255,149,.45) 0 25%, transparent 25% 50%, rgba(0,255,149,.45) 50% 75%, transparent 75% 100%); }
#energy { position: absolute; inset: 0; pointer-events: none; }
@media (max-width: 600px){ .circuit #grid { gap: 6px; padding: 10px; } }

/* run steps */
.run .steps { display: grid; gap: 16px; counter-reset: step; }
.run .step { background: rgba(0,20,10,.5); border: 1px solid var(--dim); border-radius: 8px; padding: 12px; position: relative; }
.run .step.done { border-color: var(--green); box-shadow: 0 0 16px rgba(0,255,149,.25) inset; }
.run .controls { display: grid; gap: 8px; grid-auto-flow: column; align-items: center; width: fit-content; }
.run .zone { width: 160px; height: 10px; background: rgba(0,255,149,.12); border-radius: 999px; position: relative; }
.run .zone span { position: absolute; left: 60px; right: 20px; top: 0; bottom: 0; background: rgba(0,255,149,.35); border-radius: 999px; }
@media (max-width: 600px){ .run .controls { grid-auto-flow: row; } .run .zone { width: 100%; } }
